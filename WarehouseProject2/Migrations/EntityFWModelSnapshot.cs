// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseProject2.Entities;

#nullable disable

namespace WarehouseProject2.Migrations
{
    [DbContext(typeof(EntityFW))]
    partial class EntityFWModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WarehouseProject2.Entities.Customer", b =>
                {
                    b.Property<int>("C_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("C_ID"));

                    b.Property<string>("C_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("C_Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("C_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.MeasuringUnit", b =>
                {
                    b.Property<int>("MU_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MU_ID"));

                    b.Property<string>("MU_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MU_ShortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MU_Type")
                        .HasColumnType("int");

                    b.HasKey("MU_ID");

                    b.ToTable("MeasuringUnits");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.OrderIn", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"));

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("S_ID")
                        .HasColumnType("int");

                    b.Property<int>("W_ID")
                        .HasColumnType("int");

                    b.HasKey("O_ID");

                    b.HasIndex("S_ID");

                    b.HasIndex("W_ID");

                    b.ToTable("OrderIns");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.OrderOut", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"));

                    b.Property<int>("C_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("W_ID")
                        .HasColumnType("int");

                    b.HasKey("O_ID");

                    b.HasIndex("C_ID");

                    b.HasIndex("W_ID");

                    b.ToTable("OrderOuts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product", b =>
                {
                    b.Property<int>("P_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_ID"));

                    b.Property<string>("P_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_MU")
                        .HasColumnType("int");

                    b.Property<string>("P_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("P_Type")
                        .HasColumnType("int");

                    b.HasKey("P_ID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_MeasuringUnit", b =>
                {
                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.Property<int>("MU_ID")
                        .HasColumnType("int");

                    b.HasKey("P_ID", "MU_ID");

                    b.HasIndex("MU_ID");

                    b.ToTable("Product_MeasuringUnits");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_OrderIn", b =>
                {
                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("O_ID", "P_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("Product_OrderIns");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_OrderOut", b =>
                {
                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("O_ID", "P_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("Product_OrderOuts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_TransferOrderIn", b =>
                {
                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("O_ID", "P_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("Product_TransferOrderIns");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_TransferOrderOut", b =>
                {
                    b.Property<int>("O_ID")
                        .HasColumnType("int");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("O_ID", "P_ID");

                    b.HasIndex("P_ID");

                    b.ToTable("Product_TransferOrderOuts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_Warehouse", b =>
                {
                    b.Property<int>("W_ID")
                        .HasColumnType("int");

                    b.Property<int>("P_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("W_ID", "P_ID", "ExpiryDate");

                    b.HasIndex("P_ID");

                    b.ToTable("Product_Warehouses");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Supplier", b =>
                {
                    b.Property<int>("S_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("S_ID"));

                    b.Property<string>("S_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Fax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("S_Site")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("S_ID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.TransferOrderIn", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"));

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SourceWarehouse_ID")
                        .HasColumnType("int");

                    b.Property<int>("TargetWarehouse_ID")
                        .HasColumnType("int");

                    b.HasKey("O_ID");

                    b.HasIndex("SourceWarehouse_ID");

                    b.HasIndex("TargetWarehouse_ID");

                    b.ToTable("TransferOrderIns");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.TransferOrderOut", b =>
                {
                    b.Property<int>("O_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("O_ID"));

                    b.Property<DateTime>("O_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("SourceWarehouse_ID")
                        .HasColumnType("int");

                    b.Property<int>("TargetWarehouse_ID")
                        .HasColumnType("int");

                    b.HasKey("O_ID");

                    b.HasIndex("SourceWarehouse_ID");

                    b.HasIndex("TargetWarehouse_ID");

                    b.ToTable("TransferOrderOuts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Warehouse", b =>
                {
                    b.Property<int>("W_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("W_ID"));

                    b.Property<string>("Manager_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("W_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("W_ID");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.OrderIn", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.Supplier", "Supplier")
                        .WithMany("OrderIns")
                        .HasForeignKey("S_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Warehouse", "Warehouse")
                        .WithMany("OrderIns")
                        .HasForeignKey("W_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.OrderOut", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.Customer", "Customer")
                        .WithMany("OrderOuts")
                        .HasForeignKey("C_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Warehouse", "Warehouse")
                        .WithMany("OrderOuts")
                        .HasForeignKey("W_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_MeasuringUnit", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.MeasuringUnit", "MeasuringUnit")
                        .WithMany("Product_MeasuringUnits")
                        .HasForeignKey("MU_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Product", "Product")
                        .WithMany("Product_MeasuringUnits")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MeasuringUnit");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_OrderIn", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.OrderIn", "OrderIn")
                        .WithMany("OrderProducts")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Product", "Product")
                        .WithMany("Product_OrderIns")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderIn");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_OrderOut", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.OrderOut", "OrderOut")
                        .WithMany("OrderProducts")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Product", "Product")
                        .WithMany("Product_OrderOuts")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderOut");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_TransferOrderIn", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.TransferOrderIn", "TransferOrderIn")
                        .WithMany("OrderProducts")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Product", "Product")
                        .WithMany("Product_TransferOrderIns")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferOrderIn");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_TransferOrderOut", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.TransferOrderOut", "TransferOrderOut")
                        .WithMany("OrderProducts")
                        .HasForeignKey("O_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Product", "Product")
                        .WithMany("Product_TransferOrderOuts")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferOrderOut");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product_Warehouse", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.Product", "Product")
                        .WithMany("Product_Warehouses")
                        .HasForeignKey("P_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Warehouse", "Warehouse")
                        .WithMany("Product_Warehouses")
                        .HasForeignKey("W_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.TransferOrderIn", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.Warehouse", "SourceWarehouse")
                        .WithMany("SourceTransferOrderIns")
                        .HasForeignKey("SourceWarehouse_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Warehouse", "TargetWarehouse")
                        .WithMany("TargetTransferOrderIns")
                        .HasForeignKey("TargetWarehouse_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SourceWarehouse");

                    b.Navigation("TargetWarehouse");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.TransferOrderOut", b =>
                {
                    b.HasOne("WarehouseProject2.Entities.Warehouse", "SourceWarehouse")
                        .WithMany("SourceTransferOrderOuts")
                        .HasForeignKey("SourceWarehouse_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseProject2.Entities.Warehouse", "TargetWarehouse")
                        .WithMany("TargetTransferOrderOuts")
                        .HasForeignKey("TargetWarehouse_ID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("SourceWarehouse");

                    b.Navigation("TargetWarehouse");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Customer", b =>
                {
                    b.Navigation("OrderOuts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.MeasuringUnit", b =>
                {
                    b.Navigation("Product_MeasuringUnits");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.OrderIn", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.OrderOut", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Product", b =>
                {
                    b.Navigation("Product_MeasuringUnits");

                    b.Navigation("Product_OrderIns");

                    b.Navigation("Product_OrderOuts");

                    b.Navigation("Product_TransferOrderIns");

                    b.Navigation("Product_TransferOrderOuts");

                    b.Navigation("Product_Warehouses");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Supplier", b =>
                {
                    b.Navigation("OrderIns");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.TransferOrderIn", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.TransferOrderOut", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("WarehouseProject2.Entities.Warehouse", b =>
                {
                    b.Navigation("OrderIns");

                    b.Navigation("OrderOuts");

                    b.Navigation("Product_Warehouses");

                    b.Navigation("SourceTransferOrderIns");

                    b.Navigation("SourceTransferOrderOuts");

                    b.Navigation("TargetTransferOrderIns");

                    b.Navigation("TargetTransferOrderOuts");
                });
#pragma warning restore 612, 618
        }
    }
}
